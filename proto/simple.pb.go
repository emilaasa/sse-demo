// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/simple.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SimpleRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleRequest) Reset()         { *m = SimpleRequest{} }
func (m *SimpleRequest) String() string { return proto.CompactTextString(m) }
func (*SimpleRequest) ProtoMessage()    {}
func (*SimpleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4285f8f75e6ba5cf, []int{0}
}

func (m *SimpleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleRequest.Unmarshal(m, b)
}
func (m *SimpleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleRequest.Marshal(b, m, deterministic)
}
func (m *SimpleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleRequest.Merge(m, src)
}
func (m *SimpleRequest) XXX_Size() int {
	return xxx_messageInfo_SimpleRequest.Size(m)
}
func (m *SimpleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleRequest proto.InternalMessageInfo

type SimpleResponse struct {
	EventID              string   `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
	Payload              string   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleResponse) Reset()         { *m = SimpleResponse{} }
func (m *SimpleResponse) String() string { return proto.CompactTextString(m) }
func (*SimpleResponse) ProtoMessage()    {}
func (*SimpleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4285f8f75e6ba5cf, []int{1}
}

func (m *SimpleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleResponse.Unmarshal(m, b)
}
func (m *SimpleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleResponse.Marshal(b, m, deterministic)
}
func (m *SimpleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleResponse.Merge(m, src)
}
func (m *SimpleResponse) XXX_Size() int {
	return xxx_messageInfo_SimpleResponse.Size(m)
}
func (m *SimpleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleResponse proto.InternalMessageInfo

func (m *SimpleResponse) GetEventID() string {
	if m != nil {
		return m.EventID
	}
	return ""
}

func (m *SimpleResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func init() {
	proto.RegisterType((*SimpleRequest)(nil), "proto.SimpleRequest")
	proto.RegisterType((*SimpleResponse)(nil), "proto.SimpleResponse")
}

func init() { proto.RegisterFile("proto/simple.proto", fileDescriptor_4285f8f75e6ba5cf) }

var fileDescriptor_4285f8f75e6ba5cf = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0xce, 0xcc, 0x2d, 0xc8, 0x49, 0xd5, 0x03, 0x73, 0x84, 0x58, 0xc1, 0x94, 0x12,
	0x3f, 0x17, 0x6f, 0x30, 0x58, 0x38, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0xc9, 0x85, 0x8b,
	0x0f, 0x26, 0x50, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc1, 0xc5, 0x9e, 0x5a, 0x96, 0x9a,
	0x57, 0xe2, 0xe9, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe3, 0x82, 0x64, 0x0a, 0x12,
	0x2b, 0x73, 0xf2, 0x13, 0x53, 0x24, 0x98, 0x20, 0x32, 0x50, 0xae, 0x91, 0x2f, 0x17, 0x37, 0xc4,
	0x94, 0x00, 0xb0, 0x65, 0x76, 0x5c, 0xdc, 0xee, 0xa9, 0x25, 0xbe, 0xa9, 0xc5, 0xc5, 0x89, 0xe9,
	0xa9, 0xc5, 0x42, 0x22, 0x10, 0x37, 0xe8, 0xa1, 0xd8, 0x2c, 0x25, 0x8a, 0x26, 0x0a, 0xb1, 0x5e,
	0x89, 0xc1, 0x80, 0x31, 0x89, 0x0d, 0x2c, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x85, 0x44,
	0x63, 0x9b, 0xc9, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SimpleProtoClient is the client API for SimpleProto service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SimpleProtoClient interface {
	GetMessages(ctx context.Context, in *SimpleRequest, opts ...grpc.CallOption) (SimpleProto_GetMessagesClient, error)
}

type simpleProtoClient struct {
	cc *grpc.ClientConn
}

func NewSimpleProtoClient(cc *grpc.ClientConn) SimpleProtoClient {
	return &simpleProtoClient{cc}
}

func (c *simpleProtoClient) GetMessages(ctx context.Context, in *SimpleRequest, opts ...grpc.CallOption) (SimpleProto_GetMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SimpleProto_serviceDesc.Streams[0], "/proto.SimpleProto/GetMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &simpleProtoGetMessagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SimpleProto_GetMessagesClient interface {
	Recv() (*SimpleResponse, error)
	grpc.ClientStream
}

type simpleProtoGetMessagesClient struct {
	grpc.ClientStream
}

func (x *simpleProtoGetMessagesClient) Recv() (*SimpleResponse, error) {
	m := new(SimpleResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SimpleProtoServer is the server API for SimpleProto service.
type SimpleProtoServer interface {
	GetMessages(*SimpleRequest, SimpleProto_GetMessagesServer) error
}

func RegisterSimpleProtoServer(s *grpc.Server, srv SimpleProtoServer) {
	s.RegisterService(&_SimpleProto_serviceDesc, srv)
}

func _SimpleProto_GetMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SimpleRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SimpleProtoServer).GetMessages(m, &simpleProtoGetMessagesServer{stream})
}

type SimpleProto_GetMessagesServer interface {
	Send(*SimpleResponse) error
	grpc.ServerStream
}

type simpleProtoGetMessagesServer struct {
	grpc.ServerStream
}

func (x *simpleProtoGetMessagesServer) Send(m *SimpleResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _SimpleProto_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.SimpleProto",
	HandlerType: (*SimpleProtoServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetMessages",
			Handler:       _SimpleProto_GetMessages_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/simple.proto",
}
